<div class="content-wrapper">
  <div class="row">
    <div class="col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Income Bar chart</h4>
          <p>Last 7 days income calculathion</p>
          <canvas id="barChart"></canvas>
        </div>
      </div>
    </div>
    <div class="col-lg-6 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Order Cart</h4>
          <p>Last 7 days Orders Aria Chart</p>
          <canvas id="areaChart"></canvas>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-lg-6 grid-margin grid-margin-lg-0 stretch-card">
    <div class="card">
      <div class="card-body">
        <h3>Orders & Canceled Orders</h3>
        <h4 class="card-title">Pie chart</h4>
        <p>Last 30 days calculation</p>
        <canvas id="pieChart"></canvas>
      </div>
    </div>
  </div>
  <div class="col-lg-6 grid-margin stretch-card">
    <div class="card">
      <div class="card-body">
        <h4 class="card-title">Profit Line chart</h4>
        <p>profit calculation in last 7 Days</p>
        <canvas id="lineChart"></canvas>
      </div>
    </div>
  </div>
</div>
</div>

<section class="mt-5 mb-5">
  <div class="container">
    <div class="row d-flex justify-content-center">
      <div class="card w-75">
        <div class="card-body">
          <p class="card-title">Cash On Delivary & Online payment </p>
          <p class="text-muted">Updations in previous 7 Days</p>
          <div class="row mb-3">
            <div class="col-md-7">
              <div class="d-flex justify-content-between traffic-status">
                <div class="item">
                  <p class="mb-">Cash on Delivary</p>
                  <h5 class="font-weight-bold mb-0" id="sumOfCod"></h5>
                  <div class="color-border"></div>
                </div>
                <div class="item">
                  <p class="mb-">Online Payment</p>
                  <h5 class="font-weight-bold mb-0">58,605</h5>
                  <div class="color-border"></div>
                </div>
              </div>
            </div>
          </div>
          <canvas id="iWorldAudienceCart"></canvas>
        </div>
      </div>
    </div>
  </div>

</section>

<section>
  <div class="container">
    <div class="row">
      <div class="col-lg-12 grid-margin stretch-card">
        <div class="card">
          <div class="card-body" style="background-color:rgb(248, 235, 237) ; " id="pdf">

            <button class="btn btn-inverse-warning btn-icon" style="margin-right: auto;"
              onclick="printDiv('pdf','Title')"><i class="bi bi-arrow-down-square-fill"></i>Print</button>

            <h3 class="card-title mt-5">Sales Report</h3>
            <p>Last 30 days Sales report</p>
            <div class="table-responsive">
              <table class="table table-striped" style="font-weight:bold ;">
                <thead>
                  <tr>
                    <th>
                      No.
                    </th>
                    <th>
                      date
                    </th>
                    <th>
                      Total Amount
                    </th>
                    <th>
                      Profit
                    </th>
                    <th>
                      Orders
                    </th>
                    {{!-- <th>
                      Progress
                    </th> --}}
                  </tr>
                </thead>
                <tbody>
                  {{#each salesReport}}
                  <tr>
                    <td>
                      {{inc @index}}
                    </td>
                    <td>
                      {{this._id.date}}
                    </td>
                    <td>
                      {{this.totalPrice}}
                    </td>
                    <td>
                      {{this.profit}}
                    </td>
                    <td>
                      {{this.count}}
                    </td>
                    {{!-- <td>
                      <div class="progress" style="background-color: #c7d5e3;">
                        <div class="progress-bar bg-danger" role="progressbar" style="width: 50% " aria-valuenow="15"
                          aria-valuemin="0" aria-valuemax="100">50%</div>
                      </div>
                    </td> --}}
                  </tr>
                  {{/each}}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>


<script>
  $(function () {
    if ($("#iWorldAudienceCart").length) {
      var AudienceChartCanvas = $("#iWorldAudienceCart").get(0).getContext("2d");
      var AudienceChart = new Chart(AudienceChartCanvas, {
        type: 'bar',
        data: {
          labels: ['{{codAndOp.[6]._id.date}}', '{{codAndOp.[5]._id.date}}', '{{codAndOp.[4]._id.date}}', '{{codAndOp.[3]._id.date}}', '{{codAndOp.[2]._id.date}}', '{{codAndOp.[1]._id.date}}', '{{codAndOp.[0]._id.date}}'],
          datasets: [
            {
              type: 'line',
              fill: false,
              data: ['{{codAndOp.[6].count}}', '{{codAndOp.[5].count}}', '{{codAndOp.[4].count}}', '{{codAndOp.[3].count}}', '{{codAndOp.[2].count}}', '{{codAndOp.[1].count}}', '{{codAndOp.[0].count}}'],
              borderColor: '#ff4c5b'
            },
            {
              type: 'line',
              fill: false,
              data: ['{{OpAndCod.[6].count}}', '{{OpAndCod.[5].count}}', '{{OpAndCod.[4].count}}', '{{OpAndCod.[3].count}}', '{{OpAndCod.[2].count}}', '{{OpAndCod.[1].count}}', '{{OpAndCod.[0].count}}'],
              borderColor: '#008000'
            },
            {
              label: 'Cash On Delivarys',
              data: ['{{codAndOp.[6].count}}', '{{codAndOp.[5].count}}', '{{codAndOp.[4].count}}', '{{codAndOp.[3].count}}', '{{codAndOp.[2].count}}', '{{codAndOp.[1].count}}', '{{codAndOp.[0].count}}'],
              backgroundColor: '#6640b2'
            },
            {
              label: 'Online Payments',
              data: ['{{OpAndCod.[6].count}}', '{{OpAndCod.[5].count}}', '{{OpAndCod.[4].count}}', '{{OpAndCod.[3].count}}', '{{OpAndCod.[2].count}}', '{{OpAndCod.[1].count}}', '{{OpAndCod.[0].count}}'],
              backgroundColor: '#1cbccd'
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: true,
          layout: {
            padding: {
              left: 0,
              right: 0,
              top: 20,
              bottom: 0
            }
          },
          scales: {
            yAxes: [{
              display: true,
              gridLines: {
                display: true,
                drawBorder: false,
                color: "#f8f8f8",
                zeroLineColor: "#f8f8f8"
              },
              ticks: {
                display: true,
                min: 0,
                //max: ,
                stepSize: 5,
                fontColor: "#000",
                fontSize: 10,
                padding: 10
              }
            }],
            xAxes: [{
              stacked: false,
              ticks: {
                beginAtZero: true,
                fontColor: "#b1b0b0",
                fontSize: 10
              },
              gridLines: {
                color: "rgba(0, 0, 0, 0)",
                display: false
              },
              barPercentage: .9,
              categoryPercentage: .7,
            }]
          },
          legend: {
            display: false
          },
          elements: {
            point: {
              radius: 3,
              backgroundColor: '#ff4c5b'
            }
          }
        },
      });
    }


  });
</script>

<script>
  $(function () {
    'use strict';
    let incomeData = '{{income}}'
    let day1 = Number('{{income.[6].totalPrice}}') * 50 / 100
    let day2 = Number('{{income.[5].totalPrice}}') * 50 / 100
    let day3 = Number('{{income.[4].totalPrice}}') * 50 / 100
    let day4 = Number('{{income.[3].totalPrice}}') * 50 / 100
    let day5 = Number('{{income.[2].totalPrice}}') * 50 / 100
    let day6 = Number('{{income.[1].totalPrice}}') * 50 / 100
    let day7 = Number('{{income.[0].totalPrice}}') * 50 / 100
    let data = {
      labels: ["{{income.[6]._id.date}}", "{{income.[5]._id.date}}", "{{income.[4]._id.date}}", "{{income.[3]._id.date}}", "{{income.[2]._id.date}}", "{{income.[1]._id.date}}", "{{income.[0]._id.date}}",],
      datasets: [{
        label: ' of Income',
        data: [day1, day2, day3, day4, day5, day6, day7],
        backgroundColor: [
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)',
          'rgba(54, 162, 235, 0.2)'
        ],
        borderColor: [
          'rgba(255,99,132,1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)',
          'rgba(54, 162, 235, 1)'
        ],
        borderWidth: 1,
        fill: false
      }]
    };
    let options = {
      scales: {
        yAxes: [{
          ticks: {
            beginAtZero: true
          }
        }]
      },
      legend: {
        display: false
      },
      elements: {
        point: {
          radius: 0
        }
      }

    };
    let linedata = {
      labels: ["{{income.[6]._id.date}}", "{{income.[5]._id.date}}", "{{income.[4]._id.date}}", "{{income.[3]._id.date}}", "{{income.[2]._id.date}}", "{{income.[1]._id.date}}", "{{income.[0]._id.date}}",],
      datasets: [{
        label: ' of Income',
        data: [day1, day2, day3, day4, day5, day6, day7],
        backgroundColor: [
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)'
        ],
        borderColor: [
          'rgba(255,99,132,1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)'
        ],
        borderWidth: 1,
        fill: false
      }]
    };
    let doughnutPieData = {
      datasets: [{
        data: ['{{cancelOrders}}', '{{ordersCount}}'],
        backgroundColor: [
          'rgba(255, 99, 132, 0.5)',
          'rgba(54, 162, 235, 0.5)',
          'rgba(255, 206, 86, 0.5)',
          'rgba(75, 192, 192, 0.5)',
          'rgba(153, 102, 255, 0.5)',
          'rgba(255, 159, 64, 0.5)'
        ],
        borderColor: [
          'rgba(255,99,132,1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)'
        ],
      }],

      // These labels appear in the legend and in the tooltips when hovering different arcs
      labels: [
        'Canceld Orders',
        'Success Orders',
      ]
    };
    let doughnutPieOptions = {
      responsive: true,
      animation: {
        animateScale: true,
        animateRotate: true
      }
    };
    let areaData = {
      labels: ["{{orderData.[6]._id.date}}", "{{orderData.[5]._id.date}}", "{{orderData.[4]._id.date}}", "{{orderData.[3]._id.date}}", "{{orderData.[2]._id.date}}", "{{orderData.[1]._id.date}}", '{{orderData.[0]._id.date}}'],
      datasets: [{
        label: 'Order Flow',
        data: ['{{orderData.[6].count}}', '{{orderData.[5].count}}', '{{orderData.[4].count}}', '{{orderData.[3].count}}', '{{orderData.[2].count}}', '{{orderData.[1].count}}', '{{orderData.[0].count}}'],
        backgroundColor: [
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)'
        ],
        borderColor: [
          'rgba(255,99,132,1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)'
        ],
        borderWidth: 1,
        fill: true, // 3: no fill
      }]
    };

    let areaOptions = {
      plugins: {
        filler: {
          propagate: true
        }
      }
    }


    // Get context with jQuery - using jQuery's .get() method.
    if ($("#barChart").length) {
      let barChartCanvas = $("#barChart").get(0).getContext("2d");
      // This will get the first returned node in the jQuery collection.
      let barChart = new Chart(barChartCanvas, {
        type: 'bar',
        data: data,
        options: options
      });
    }

    if ($("#lineChart").length) {
      let lineChartCanvas = $("#lineChart").get(0).getContext("2d");
      let lineChart = new Chart(lineChartCanvas, {
        type: 'line',
        data: linedata,
        options: options
      });
    }

    if ($("#doughnutChart").length) {
      let doughnutChartCanvas = $("#doughnutChart").get(0).getContext("2d");
      let doughnutChart = new Chart(doughnutChartCanvas, {
        type: 'doughnut',
        data: doughnutPieData,
        options: doughnutPieOptions
      });
    }

    if ($("#pieChart").length) {
      let pieChartCanvas = $("#pieChart").get(0).getContext("2d");
      let pieChart = new Chart(pieChartCanvas, {
        type: 'pie',
        data: doughnutPieData,
        options: doughnutPieOptions
      });
    }

    if ($("#areaChart").length) {
      let areaChartCanvas = $("#areaChart").get(0).getContext("2d");
      let areaChart = new Chart(areaChartCanvas, {
        type: 'line',
        data: areaData,
        options: areaOptions
      });
    }

    if ($("#scatterChart").length) {
      let scatterChartCanvas = $("#scatterChart").get(0).getContext("2d");
      let scatterChart = new Chart(scatterChartCanvas, {
        type: 'scatter',
        data: scatterChartData,
        options: scatterChartOptions
      });
    }
  });
</script>

<script>
  var doc = new jsPDF();


  function printDiv(divId,
    title) {

    let mywindow = window.open('', 'PRINT', 'height=650,width=900,top=100,left=150');

    mywindow.document.write(`<html><head><title>${title}</title>`);
    mywindow.document.write('</head><body >');
    mywindow.document.write(document.getElementById(divId).innerHTML);
    mywindow.document.write('</body></html>');

    mywindow.document.close(); // necessary for IE >= 10
    mywindow.focus(); // necessary for IE >= 10*/

    mywindow.print();
    mywindow.close();

    return true;
  }
</script>